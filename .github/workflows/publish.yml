name: Publish

on:
  push:
    tags:
      - 'test-*'   # TestPyPI
      - 'v*'       # PyPI

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine
      - name: Build
        run: |
          python -m build
      - name: Publish to TestPyPI
        if: startsWith(github.ref, 'refs/tags/test-')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-and-publish:
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build sdist and wheel
        run: |
          python -m build
      - name: Publish package to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true


